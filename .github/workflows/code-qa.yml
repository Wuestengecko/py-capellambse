# SPDX-FileCopyrightText: Copyright DB InfraGO AG
# SPDX-License-Identifier: CC0-1.0
# vim:set fdm=marker:

name: Code QA

on:
  pull_request:
  push:
    branches: [master]
    tags: ["v*.*.*"]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.ref_type == 'tag' && github.sha || '0' }}
  cancel-in-progress: true

jobs:
  pre-commit: # {{{1
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"
          python-version: "3.12"
      - name: Run Pre-Commit
        run: uv run pre-commit run --all-files

  example-notebooks: # {{{1
    name: Run and verify the example notebooks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"
          python-version: "3.12"
      - name: Run example notebooks
        run: make -C docs verify-examples

  docs: # {{{1
    name: Build documentation
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"
          python-version: "3.12"
      - name: Install system-level dependencies
        run: sudo apt-get install -y pandoc
      - name: Auto-generate APIDOC sources
        run: make -C docs apidoc
      - name: Create docs
        env:
          SPHINXOPTS: ""
        run: make -C docs html
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v4
        with:
          force_orphan: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/build/html

  downstream-tests: # {{{1
    name: Run downstream tests in ${{matrix.repo}}
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        repo:
          - dbinfrago/capellambse-context-diagrams
          - dbinfrago/capella-polarion
          - dbinfrago/json2capella
          - dbinfrago/capella-ros-tools
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          filter: tree:0
          repository: ${{matrix.repo}}
      - uses: actions/download-artifact@v6
        with:
          path: wheelhouse/
          name: wheel-Linux-x86_64-manylinux
      - uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"
          python-version: "3.13"
      - name: Setup deno (for context-diagrams only)
        uses: denoland/setup-deno@v2
        if: matrix.repo == 'dbinfrago/capellambse-context-diagrams'
        with:
          deno-version: "2.3.6"
      - run: |-
          echo SETUPTOOLS_SCM_PRETEND_VERSION="$(
            uvx --with setuptools_scm python -c \
              "import setuptools_scm as scm; print(scm.get_version())"
          )" >> "$GITHUB_ENV"
      - run: uv add --dev ./wheelhouse/*.whl pytest pytest-xdist && uv sync
      - run: uv run pytest -n auto
